generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String     @unique
  firstName     String
  lastName      String
  password      String
  role          String     @default("USER") // USER, ADMIN
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  age           Int?
  height        Float?
  weight        Float?
  gender        String?
  activityLevel String?
  dietPlans     DietPlan[]
  goals         Goal[]

  @@map("users")
}

model DietPlan {
  id          String   @id @default(cuid())
  name        String
  description String?
  type        String
  duration    Int
  calories    Int
  mealsPerDay Int
  price       Float
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String?
  user        User?    @relation(fields: [userId], references: [id])
  meals       Meal[]

  @@map("diet_plans")
}

model Meal {
  id           String       @id @default(cuid())
  name         String
  type         String
  calories     Int
  protein      Float
  carbs        Float
  fat          Float
  instructions String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  dietPlanId   String
  ingredients  Ingredient[]
  dietPlan     DietPlan     @relation(fields: [dietPlanId], references: [id], onDelete: Cascade)

  @@map("meals")
}

model Ingredient {
  id       String @id @default(cuid())
  name     String
  quantity String
  unit     String
  mealId   String
  meal     Meal   @relation(fields: [mealId], references: [id], onDelete: Cascade)

  @@map("ingredients")
}

model Goal {
  id        String    @id @default(cuid())
  type      String
  target    Float?
  deadline  DateTime?
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("goals")
}
